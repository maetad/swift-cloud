# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Album {
  createdAt: DateTime!
  id: ID!
  songs: [Song!]!
  title: String!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input ListSongFilter {
  album: String
  artist: String
  direction: String = "ASC"
  order: String = "id"
  title: String
  views: ViewFilter
  writer: String
  year: Float
}

input MonthYear {
  month: Float!
  year: Float!
}

type PageInfo {
  endCursor: String
  startCursor: String
  totalCount: Float!
}

type PaginatedSong {
  edges: [SongEdge!]
  nodes: [Song!]
  pageInfo: PageInfo
}

input Pagination {
  after: String
  before: String
  first: Int
  last: Int
}

type Query {
  song(filter: SongFilter, id: Int!): Song!
  songs(filter: ListSongFilter, pagination: Pagination): PaginatedSong!
}

type Song {
  album: Album!
  artist: String!
  createdAt: DateTime!
  id: ID!
  title: String!
  totalViews: Float!
  updatedAt: DateTime!
  views: [SongView!]!
  writers: [String!]!
  year: Float
}

type SongEdge {
  cursor: String!
  node: Song!
}

input SongFilter {
  views: ViewFilter
}

type SongView {
  count: Float!
  createdAt: DateTime!
  id: ID!
  month: Float!
  song: Song!
  updatedAt: DateTime!
  year: Float!
}

input ViewFilter {
  from: MonthYear
  to: MonthYear
}